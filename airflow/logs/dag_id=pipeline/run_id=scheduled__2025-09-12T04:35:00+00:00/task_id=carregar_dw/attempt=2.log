{"timestamp":"2025-09-12T08:35:34.924023","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T08:35:34.924325","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T08:35:35.006522","level":"info","event":"Starting docker container from image meltano-banvic:latest","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:35.923647","level":"info","event":"\u001b[2m2025-09-12T08:35:35.923030Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mEnvironment 'dev' is active   \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.233864","level":"info","event":"\u001b[2m2025-09-12T08:35:37.233385Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mCannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993d10-d051-7397-86c9-b95fb190ac0d.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.233947","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.233981","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234006","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234027","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234048","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234066","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234086","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234105","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234123","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234143","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234165","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234183","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234201","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234221","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234241","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234260","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234277","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234295","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234313","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234330","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234347","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234364","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234382","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234398","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234414","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234431","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234447","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234464","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234481","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234498","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234514","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234531","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234547","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234563","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234580","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234596","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234612","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234628","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234644","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234660","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234687","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234706","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234727","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234745","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234764","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234782","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234800","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234819","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234837","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234854","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234871","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234889","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234906","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234924","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234941","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.234987","level":"info","event":"\u001b[2m2025-09-12T08:35:37.233604Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mBlock run completed           \u001b[0m \u001b[36mblock_type\u001b[0m=\u001b[35mExtractLoadBlocks\u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.165\u001b[0m \u001b[36merr\u001b[0m=\u001b[35mRunnerError('Cannot start plugin tap-datalake: Catalog discovery failed: command [\\'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\\', \\'--config\\', \\'/project/.meltano/run/tap-datalake/tap.01993d10-d051-7397-86c9-b95fb190ac0d.config.json\\', \\'--discover\\'] returned 1 with stderr:\\n Skipping parse of env var settings...\\nTraceback (most recent call last):\\n  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>\\n    sys.exit(TapCSV.cli())\\n             ^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__\\n    return self.main(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main\\n    with self.make_context(prog_name, args, **extra) as ctx:\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context\\n    self.parse_args(ctx, args)\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args\\n    value, args = param.handle_parse_result(ctx, opts, args)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result\\n    value = self.process_value(ctx, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value\\n    value = self.callback(ctx, self, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover\\n    tap.run_discovery()\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery\\n    catalog_text = self.catalog_json_text\\n                   ^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text\\n    return dump_json(self.catalog_dict, indent=2)\\n                     ^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict\\n    return t.cast(\"dict\", self._singer_catalog.to_dict())\\n                          ^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog\\n    return Catalog(\\n           ^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>\\n    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry\\n    schema=singer.Schema.from_dict(self.schema),\\n                                   ^^^^^^^^^^^\\n  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__\\n    val = self.func(instance)\\n          ^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema\\n    th.Property(column, th.StringType()) for column in self.header\\n                                                       ^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header\\n    first_file = self.get_file_paths()[0]\\n                 ^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths\\n    raise Exception(f\"File path does not exist {file_path}\")\\nException: File path does not exist load/data/latest/public-agencias.csv\\n')\u001b[0m \u001b[36mexit_codes\u001b[0m=\u001b[35m{}\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993d10-cfc0-776c-b0e6-691944731d14\u001b[0m \u001b[36mset_number\u001b[0m=\u001b[35m0\u001b[0m \u001b[36msuccess\u001b[0m=\u001b[35mFalse\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.238398","level":"info","event":"\u001b[2m2025-09-12T08:35:37.238081Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mRun completed                 \u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.17\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993d10-cfc0-776c-b0e6-691944731d14\u001b[0m \u001b[36mstatus\u001b[0m=\u001b[35mfailure\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448129","level":"info","event":"\u001b[2m2025-09-12T08:35:37.238562Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mNeed help fixing this problem? Visit http://melta.no/ for troubleshooting steps, or to join our friendly Slack community.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448241","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448306","level":"info","event":"Run invocation could not be completed as block failed: Cannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993d10-d051-7397-86c9-b95fb190ac0d.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448366","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448423","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448478","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448531","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448585","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448635","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448698","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448752","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448935","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448975","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.448998","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449020","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449039","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449056","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449074","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449091","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449108","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449125","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449146","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449162","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449178","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449194","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449210","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449226","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449242","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449258","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449275","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449291","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449307","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449324","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449342","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449360","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449377","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449394","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449411","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449429","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449447","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449463","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449480","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449497","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449515","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449531","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449548","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449563","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449580","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449596","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449619","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449637","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449655","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449673","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449696","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449713","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449731","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449747","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449763","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449779","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449802","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:329 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449825","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449844","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m326 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449862","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m327 \u001b[0m\u001b[2m│   │   \u001b[0mstdin = asyncio.subprocess.PIPE \u001b[94mif\u001b[0m \u001b[96mself\u001b[0m.consumer \u001b[94melse\u001b[0m \u001b[94mNone\u001b[0m     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449880","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m328 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449899","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m329 \u001b[2m│   │   │   \u001b[0m\u001b[96mself\u001b[0m._process_handle = \u001b[94mawait\u001b[0m \u001b[96mself\u001b[0m.invoker.invoke_async(    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449918","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m330 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mlimit=line_length_limit,                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449936","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m331 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdin=stdin,  \u001b[2m# Singer messages\u001b[0m                        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449954","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m332 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdout=asyncio.subprocess.PIPE,  \u001b[2m# Singer state\u001b[0m        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449972","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.449989","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/\u001b[0m\u001b[1mplugin_invoker.py\u001b[0m:507 in     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450008","level":"info","event":"\u001b[31m│\u001b[0m invoke_async                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450026","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450045","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33mReturns:\u001b[0m                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450065","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2;33m│   │   │   \u001b[0m\u001b[33mSubprocess.\u001b[0m                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450083","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m506 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450101","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m507 \u001b[2m│   │   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mwith\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m._invoke(*args, **kwargs)\u001b[0m \u001b[94mas\u001b[0m (                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450118","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m508 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_args,                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450136","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m509 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_options,                                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450153","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m510 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_env,                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450174","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450196","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 8 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450218","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450245","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:419 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450263","level":"info","event":"\u001b[31m│\u001b[0m _get_catalog                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450283","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450300","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m416 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mwith\u001b[0m suppress(\u001b[96mFileNotFoundError\u001b[0m):                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450317","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m417 \u001b[0m\u001b[2m│   │   │   \u001b[0mcatalog_cache_key_path.unlink()                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450336","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m418 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450353","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m419 \u001b[2m│   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_discovery(plugin_invoker, catalog_path)\u001b[0m         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450371","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m420 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m catalog_path                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450395","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m421 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450412","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m422 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mdiscover_catalog\u001b[0m(\u001b[96mself\u001b[0m, plugin_invoker: PluginInvoker) -> \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450429","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450446","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:521 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450463","level":"info","event":"\u001b[31m│\u001b[0m run_discovery                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450480","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450496","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m518 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mif\u001b[0m exit_code != \u001b[94m0\u001b[0m:                                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450513","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m519 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mcatalog_path.unlink()                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450529","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m520 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr_buff.seek(\u001b[94m0\u001b[0m)                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450550","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m521 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m PluginExecutionError(\u001b[0m                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450567","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m522 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCatalog discovery failed: command \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4m  \u001b[0m\u001b[1;2;4m# noqa: EM10\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450585","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m523 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mplugin_invoker.exec_args(\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4;33m--discover\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4m)\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m returne\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450604","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m524 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mexit_code\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m with stderr:\u001b[0m\u001b[1;4;33m\\n\u001b[0m\u001b[1;4;33m \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mstderr_buff.read()\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m\"\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450622","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450640","level":"info","event":"\u001b[1;91mPluginExecutionError: \u001b[0mCatalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450658","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450674","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993d10-d051-7397-86c9-b95fb190ac0d.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450693","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450710","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450726","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450742","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450760","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450777","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450795","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450813","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450829","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450847","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450864","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450880","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450897","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450914","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450930","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450947","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450964","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450980","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.450997","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451013","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451030","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451046","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451062","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451078","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451094","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451110","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451127","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451143","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451160","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451177","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451193","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451210","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451227","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451244","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451261","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451278","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451296","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451313","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451331","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451348","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451365","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451381","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451398","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451416","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451434","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451450","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451468","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451488","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451505","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451523","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451539","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451556","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451573","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451589","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451609","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451629","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451649","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451680","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451715","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451742","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451771","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451799","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451827","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451853","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451879","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451906","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451933","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451951","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451970","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.451990","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452008","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452027","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452045","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452064","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452086","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452105","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452124","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452143","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452162","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452181","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452199","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452216","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452233","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452250","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452268","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452286","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452304","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452322","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452341","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452359","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452378","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452395","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452413","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452434","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:251 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452452","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452470","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m248 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452487","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m249 \u001b[0m\u001b[2m│   │   \u001b[0mblock_start_time = time.perf_counter()                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452504","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m250 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452527","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m251 \u001b[2m│   │   │   \u001b[0m\u001b[94mawait\u001b[0m blk.run()                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452545","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m252 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m RunnerError \u001b[94mas\u001b[0m err:                                     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452563","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m253 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_end_time = time.perf_counter()                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452580","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m254 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_duration = block_end_time - block_start_time         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452597","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452614","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:502 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452635","level":"info","event":"\u001b[31m│\u001b[0m run                                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452654","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452674","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m499 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[2m# TODO: legacy `meltano elt` style logging should be depre\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452706","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m500 \u001b[0m\u001b[2m│   │   │   \u001b[0mlegacy_log_handler = \u001b[96mself\u001b[0m.output_logger.out(\u001b[33m\"\u001b[0m\u001b[33mmeltano\u001b[0m\u001b[33m\"\u001b[0m, log \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452724","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m501 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m legacy_log_handler.redirect_logging():                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452742","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m502 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_with_job()\u001b[0m                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452760","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m503 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mreturn\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452778","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94melse\u001b[0m:                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452795","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2m│   │   │   \u001b[0mlogger.warning(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452813","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452830","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 3 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452846","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452864","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:631 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452882","level":"info","event":"\u001b[31m│\u001b[0m _start_blocks                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452900","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452916","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m628 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452933","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m629 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mfor\u001b[0m block \u001b[95min\u001b[0m \u001b[96mself\u001b[0m.blocks:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452951","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m630 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.pre(\u001b[96mself\u001b[0m.context)                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452968","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m631 \u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.start()                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.452986","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m632 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94myield\u001b[0m                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453003","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m633 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mfinally\u001b[0m:                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453019","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m634 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m._cleanup()\u001b[0m                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453038","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453054","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:336 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453070","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453087","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m333 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr=asyncio.subprocess.PIPE,  \u001b[2m# Log\u001b[0m                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453104","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m334 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453121","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m335 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453138","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m336 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m RunnerError(\u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCannot start plugin \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.string_id\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m: \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453156","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m337 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453173","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m338 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mstop\u001b[0m(\u001b[96mself\u001b[0m, *, kill: \u001b[96mbool\u001b[0m = \u001b[94mTrue\u001b[0m) -> \u001b[94mNone\u001b[0m:                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453190","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m339 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Stop (kill) the underlying process and cancel output proxyi\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453207","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453225","level":"info","event":"\u001b[1;91mRunnerError: \u001b[0mCannot start plugin tap-datalake: Catalog discovery failed: command","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453242","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453259","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993d10-d051-7397-86c9-b95fb190ac0d.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453276","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453293","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453310","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453327","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453343","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453360","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453377","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453393","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453410","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453426","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453442","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453458","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453474","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453490","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453506","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453522","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453539","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453556","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453572","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453588","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453604","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453621","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453638","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453654","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453671","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453690","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453707","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453724","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453740","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453757","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453774","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453790","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453806","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453822","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453839","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453855","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453872","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453888","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453904","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453921","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453937","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453952","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453968","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.453984","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454000","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454015","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454031","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454048","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454065","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454083","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454101","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454117","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454134","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454151","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454168","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454185","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454201","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454217","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454233","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454248","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454265","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454281","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454297","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454313","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454329","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454344","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454361","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454376","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454392","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454408","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454424","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454440","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454457","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454472","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454489","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454505","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454521","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454539","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454555","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454572","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454589","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454605","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454622","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454638","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454654","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454670","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454691","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454708","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454725","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454742","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454760","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454776","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454793","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454812","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1m__init__.py\u001b[0m:105 in _run_cli   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454830","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454846","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m102 \u001b[0m\u001b[2;33m│   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454863","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m103 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454880","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m104 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454897","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m105 \u001b[2m│   │   │   \u001b[0mcli(obj={\u001b[33m\"\u001b[0m\u001b[33mproject\u001b[0m\u001b[33m\"\u001b[0m: \u001b[94mNone\u001b[0m})                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454914","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m106 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m ProjectReadonly \u001b[94mas\u001b[0m err:                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454931","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m107 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mraise\u001b[0m CliError(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454948","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m108 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[33mf\u001b[0m\u001b[33m\"\u001b[0m\u001b[33mThe requested action could not be completed: \u001b[0m\u001b[33m{\u001b[0merr\u001b[33m}\u001b[0m\u001b[33m\"\u001b[0m, \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454965","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454982","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/click/\u001b[0m\u001b[1mcore.py\u001b[0m:1442 in __call__            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.454999","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455016","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1439 \u001b[0m\u001b[2m│   \u001b[0m                                                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455034","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1440 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92m__call__\u001b[0m(\u001b[96mself\u001b[0m, *args: t.Any, **kwargs: t.Any) -> t.Any:       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455051","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1441 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Alias for :meth:`main`.\"\"\"\u001b[0m                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455068","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m1442 \u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m.main(*args, **kwargs)\u001b[0m                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455085","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1443 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455102","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1444 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455118","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1445 \u001b[0m\u001b[94mclass\u001b[0m\u001b[90m \u001b[0m\u001b[4;92m_FakeSubclassCheck\u001b[0m(\u001b[96mtype\u001b[0m):                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455135","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455152","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 15 frames hidden ...                          \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455169","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455185","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:206 in run             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455202","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455218","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m203 \u001b[0m\u001b[2m│   \u001b[0mrun_start_time = time.perf_counter()                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455234","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m204 \u001b[0m\u001b[2m│   \u001b[0msuccess = \u001b[94mFalse\u001b[0m                                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455251","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m205 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455330","level":"info","event":"                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455353","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m206 \u001b[2m│   │   \u001b[0m\u001b[94mawait\u001b[0m _run_blocks(tracker, parsed_blocks, dry_run=dry_run)     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455373","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m207 \u001b[0m\u001b[2m│   │   \u001b[0msuccess = \u001b[94mTrue\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455391","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m208 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455409","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m209 \u001b[0m\u001b[2m│   │   \u001b[0mtracker.track_command_event(CliEvent.failed)                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455426","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455443","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:266 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455460","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455476","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m263 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455493","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m264 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m tracker.with_contexts(tracking_ctx):                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455509","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m265 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mtracker.track_block_event(blk_name, BlockEvents.failed \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455526","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m266 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m CliError(\u001b[0m                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455543","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m267 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mRun invocation could not be completed as block faile\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455559","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m268 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4m) \u001b[0m\u001b[1;4;94mfrom\u001b[0m\u001b[1;4;90m \u001b[0m\u001b[1;4;96merr\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455577","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m269 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m bare_err:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455595","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455612","level":"info","event":"\u001b[1;91mCliError: \u001b[0mRun invocation could not be completed as block failed: Cannot start ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455629","level":"info","event":"plugin tap-datalake: Catalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455645","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455661","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993d10-d051-7397-86c9-b95fb190ac0d.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455680","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455696","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455712","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455727","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455742","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455758","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455773","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455788","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455804","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455820","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455836","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455852","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455868","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455884","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455900","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455915","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455932","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455948","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455964","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455981","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.455997","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456013","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456028","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456044","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456060","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456076","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456092","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456107","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456123","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456139","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456155","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456170","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456186","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456201","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456217","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456232","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456248","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456263","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456279","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456295","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456311","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456326","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456342","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456357","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456373","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456389","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456406","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456422","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456438","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456455","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456472","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456488","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456504","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456520","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456537","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456553","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456568","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456584","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456599","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456615","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456631","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456646","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456662","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456680","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456697","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456714","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456729","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456745","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456760","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456775","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456790","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456806","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456822","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456837","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456852","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456868","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456883","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456898","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456913","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456928","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456944","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456960","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456975","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.456990","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.457006","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.457021","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.457038","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:37.457055","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T08:35:40.540629","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DockerContainerFailedException","exc_value":"Docker container failed: {'StatusCode': 1}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":500,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":377,"name":"_run_image"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":435,"name":"_run_image_with_mounts"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-12T12:11:26.239452","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T12:11:26.239725","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T12:11:26.328289","level":"info","event":"Starting docker container from image meltano-banvic:latest","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:27.324370","level":"info","event":"\u001b[2m2025-09-12T12:11:27.323743Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mEnvironment 'dev' is active   \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544606","level":"info","event":"\u001b[2m2025-09-12T12:11:28.544089Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mCannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993dd6-6fb8-7ef6-8646-6d263546fb3b.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544683","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544710","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544733","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544767","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544788","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544808","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544828","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544846","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544864","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544882","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544899","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544917","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544935","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544954","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.544974","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545003","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545022","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545041","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545059","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545077","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545095","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545113","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545131","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545149","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545166","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545183","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545200","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545218","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545235","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545252","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545269","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545286","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545302","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545319","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545336","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545352","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545369","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545387","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545403","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545420","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545440","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545459","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545477","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545494","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545512","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545534","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545557","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545581","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545603","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545624","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545644","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545664","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545683","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545704","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545724","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.545769","level":"info","event":"\u001b[2m2025-09-12T12:11:28.544435Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mBlock run completed           \u001b[0m \u001b[36mblock_type\u001b[0m=\u001b[35mExtractLoadBlocks\u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.075\u001b[0m \u001b[36merr\u001b[0m=\u001b[35mRunnerError('Cannot start plugin tap-datalake: Catalog discovery failed: command [\\'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\\', \\'--config\\', \\'/project/.meltano/run/tap-datalake/tap.01993dd6-6fb8-7ef6-8646-6d263546fb3b.config.json\\', \\'--discover\\'] returned 1 with stderr:\\n Skipping parse of env var settings...\\nTraceback (most recent call last):\\n  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>\\n    sys.exit(TapCSV.cli())\\n             ^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__\\n    return self.main(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main\\n    with self.make_context(prog_name, args, **extra) as ctx:\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context\\n    self.parse_args(ctx, args)\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args\\n    value, args = param.handle_parse_result(ctx, opts, args)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result\\n    value = self.process_value(ctx, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value\\n    value = self.callback(ctx, self, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover\\n    tap.run_discovery()\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery\\n    catalog_text = self.catalog_json_text\\n                   ^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text\\n    return dump_json(self.catalog_dict, indent=2)\\n                     ^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict\\n    return t.cast(\"dict\", self._singer_catalog.to_dict())\\n                          ^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog\\n    return Catalog(\\n           ^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>\\n    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry\\n    schema=singer.Schema.from_dict(self.schema),\\n                                   ^^^^^^^^^^^\\n  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__\\n    val = self.func(instance)\\n          ^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema\\n    th.Property(column, th.StringType()) for column in self.header\\n                                                       ^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header\\n    first_file = self.get_file_paths()[0]\\n                 ^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths\\n    raise Exception(f\"File path does not exist {file_path}\")\\nException: File path does not exist load/data/latest/public-agencias.csv\\n')\u001b[0m \u001b[36mexit_codes\u001b[0m=\u001b[35m{}\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993dd6-6f2d-7c66-83d3-b00186b622d9\u001b[0m \u001b[36mset_number\u001b[0m=\u001b[35m0\u001b[0m \u001b[36msuccess\u001b[0m=\u001b[35mFalse\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.553393","level":"info","event":"\u001b[2m2025-09-12T12:11:28.552977Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mRun completed                 \u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.084\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993dd6-6f2d-7c66-83d3-b00186b622d9\u001b[0m \u001b[36mstatus\u001b[0m=\u001b[35mfailure\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.758978","level":"info","event":"\u001b[2m2025-09-12T12:11:28.553383Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mNeed help fixing this problem? Visit http://melta.no/ for troubleshooting steps, or to join our friendly Slack community.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759223","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759284","level":"info","event":"Run invocation could not be completed as block failed: Cannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993dd6-6fb8-7ef6-8646-6d263546fb3b.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759322","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759356","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759390","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759425","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759459","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759494","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759531","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759567","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759602","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759646","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759682","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759722","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759759","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759793","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759829","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759867","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759901","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759936","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.759971","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760013","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760047","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760081","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760115","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760149","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760183","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760217","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760251","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760285","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760319","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760353","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760389","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760424","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760460","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760497","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760533","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760569","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760603","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760638","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760672","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760707","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760742","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760776","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760811","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760846","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760880","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760915","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760950","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.760986","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761027","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761062","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761103","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761142","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761177","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761211","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761245","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761279","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761321","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:329 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761365","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761405","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m326 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761444","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m327 \u001b[0m\u001b[2m│   │   \u001b[0mstdin = asyncio.subprocess.PIPE \u001b[94mif\u001b[0m \u001b[96mself\u001b[0m.consumer \u001b[94melse\u001b[0m \u001b[94mNone\u001b[0m     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761484","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m328 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761523","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m329 \u001b[2m│   │   │   \u001b[0m\u001b[96mself\u001b[0m._process_handle = \u001b[94mawait\u001b[0m \u001b[96mself\u001b[0m.invoker.invoke_async(    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761561","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m330 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mlimit=line_length_limit,                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761599","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m331 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdin=stdin,  \u001b[2m# Singer messages\u001b[0m                        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761636","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m332 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdout=asyncio.subprocess.PIPE,  \u001b[2m# Singer state\u001b[0m        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761672","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761707","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/\u001b[0m\u001b[1mplugin_invoker.py\u001b[0m:507 in     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761745","level":"info","event":"\u001b[31m│\u001b[0m invoke_async                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761781","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761911","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33mReturns:\u001b[0m                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.761964","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2;33m│   │   │   \u001b[0m\u001b[33mSubprocess.\u001b[0m                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762006","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m506 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762043","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m507 \u001b[2m│   │   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mwith\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m._invoke(*args, **kwargs)\u001b[0m \u001b[94mas\u001b[0m (                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762081","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m508 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_args,                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762212","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m509 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_options,                                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762254","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m510 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_env,                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762279","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762300","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 8 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762321","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762344","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:419 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762363","level":"info","event":"\u001b[31m│\u001b[0m _get_catalog                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762381","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762399","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m416 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mwith\u001b[0m suppress(\u001b[96mFileNotFoundError\u001b[0m):                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762418","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m417 \u001b[0m\u001b[2m│   │   │   \u001b[0mcatalog_cache_key_path.unlink()                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762436","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m418 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762455","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m419 \u001b[2m│   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_discovery(plugin_invoker, catalog_path)\u001b[0m         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762475","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m420 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m catalog_path                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762499","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m421 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762522","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m422 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mdiscover_catalog\u001b[0m(\u001b[96mself\u001b[0m, plugin_invoker: PluginInvoker) -> \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762540","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762558","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:521 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762578","level":"info","event":"\u001b[31m│\u001b[0m run_discovery                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762595","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762613","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m518 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mif\u001b[0m exit_code != \u001b[94m0\u001b[0m:                                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762630","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m519 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mcatalog_path.unlink()                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762647","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m520 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr_buff.seek(\u001b[94m0\u001b[0m)                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762670","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m521 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m PluginExecutionError(\u001b[0m                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762689","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m522 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCatalog discovery failed: command \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4m  \u001b[0m\u001b[1;2;4m# noqa: EM10\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762707","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m523 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mplugin_invoker.exec_args(\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4;33m--discover\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4m)\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m returne\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762726","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m524 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mexit_code\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m with stderr:\u001b[0m\u001b[1;4;33m\\n\u001b[0m\u001b[1;4;33m \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mstderr_buff.read()\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m\"\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762745","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762764","level":"info","event":"\u001b[1;91mPluginExecutionError: \u001b[0mCatalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762781","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762798","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993dd6-6fb8-7ef6-8646-6d263546fb3b.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762815","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762833","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762849","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762865","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762882","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762898","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762915","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762931","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762947","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762963","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.762979","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763002","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763019","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763035","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763052","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763068","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763085","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763102","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763118","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763135","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763151","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763167","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763183","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763199","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763216","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763232","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763249","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763266","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763282","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763298","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763314","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763330","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763346","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763364","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763381","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763398","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763415","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763433","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763449","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763466","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763483","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763499","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763516","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763533","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763549","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763565","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763582","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763599","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763614","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763631","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763647","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763663","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763679","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763696","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763713","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763730","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763747","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763763","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763779","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763795","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763811","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763828","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763844","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763860","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763876","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763892","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763908","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763923","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763939","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763956","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763973","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.763992","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764009","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764026","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764043","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764060","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764076","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764094","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764111","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764128","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764145","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764161","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764177","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764193","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764209","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764225","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764242","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764259","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764277","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764296","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764313","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764330","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764347","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764365","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:251 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764383","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764399","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m248 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764416","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m249 \u001b[0m\u001b[2m│   │   \u001b[0mblock_start_time = time.perf_counter()                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764432","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m250 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764453","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m251 \u001b[2m│   │   │   \u001b[0m\u001b[94mawait\u001b[0m blk.run()                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764470","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m252 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m RunnerError \u001b[94mas\u001b[0m err:                                     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764487","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m253 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_end_time = time.perf_counter()                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764503","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m254 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_duration = block_end_time - block_start_time         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764520","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764537","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:502 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764554","level":"info","event":"\u001b[31m│\u001b[0m run                                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764571","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764587","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m499 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[2m# TODO: legacy `meltano elt` style logging should be depre\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764608","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m500 \u001b[0m\u001b[2m│   │   │   \u001b[0mlegacy_log_handler = \u001b[96mself\u001b[0m.output_logger.out(\u001b[33m\"\u001b[0m\u001b[33mmeltano\u001b[0m\u001b[33m\"\u001b[0m, log \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764625","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m501 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m legacy_log_handler.redirect_logging():                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764642","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m502 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_with_job()\u001b[0m                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764659","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m503 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mreturn\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764676","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94melse\u001b[0m:                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764692","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2m│   │   │   \u001b[0mlogger.warning(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764708","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764726","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 3 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764743","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764759","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:631 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764776","level":"info","event":"\u001b[31m│\u001b[0m _start_blocks                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764792","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764809","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m628 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764826","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m629 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mfor\u001b[0m block \u001b[95min\u001b[0m \u001b[96mself\u001b[0m.blocks:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764842","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m630 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.pre(\u001b[96mself\u001b[0m.context)                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764859","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m631 \u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.start()                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764875","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m632 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94myield\u001b[0m                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764891","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m633 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mfinally\u001b[0m:                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764908","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m634 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m._cleanup()\u001b[0m                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764924","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764940","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:336 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764957","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764973","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m333 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr=asyncio.subprocess.PIPE,  \u001b[2m# Log\u001b[0m                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.764989","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m334 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765007","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m335 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765024","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m336 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m RunnerError(\u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCannot start plugin \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.string_id\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m: \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765042","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m337 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765058","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m338 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mstop\u001b[0m(\u001b[96mself\u001b[0m, *, kill: \u001b[96mbool\u001b[0m = \u001b[94mTrue\u001b[0m) -> \u001b[94mNone\u001b[0m:                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765075","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m339 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Stop (kill) the underlying process and cancel output proxyi\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765093","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765110","level":"info","event":"\u001b[1;91mRunnerError: \u001b[0mCannot start plugin tap-datalake: Catalog discovery failed: command","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765127","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765143","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993dd6-6fb8-7ef6-8646-6d263546fb3b.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765160","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765176","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765192","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765207","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765223","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765239","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765254","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765270","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765285","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765300","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765316","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765332","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765348","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765363","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765379","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765394","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765411","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765428","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765444","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765460","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765476","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765492","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765509","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765525","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765541","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765557","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765572","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765588","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765604","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765620","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765636","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765652","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765668","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765683","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765699","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765715","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765731","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765746","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765762","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765778","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765793","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765808","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765824","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765839","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765855","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765870","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765885","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765901","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765916","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765933","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765950","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765965","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765981","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.765999","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766015","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766031","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766047","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766062","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766078","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766094","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766109","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766125","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766140","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766155","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766171","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766187","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766202","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766218","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766234","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766249","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766265","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766280","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766295","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766311","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766326","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766342","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766358","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766373","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766389","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766404","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766419","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766436","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766452","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766467","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766482","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766498","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766515","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766530","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766547","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766565","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766583","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766599","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766615","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766634","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1m__init__.py\u001b[0m:105 in _run_cli   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766651","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766668","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m102 \u001b[0m\u001b[2;33m│   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766685","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m103 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766701","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m104 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766718","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m105 \u001b[2m│   │   │   \u001b[0mcli(obj={\u001b[33m\"\u001b[0m\u001b[33mproject\u001b[0m\u001b[33m\"\u001b[0m: \u001b[94mNone\u001b[0m})                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766741","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m106 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m ProjectReadonly \u001b[94mas\u001b[0m err:                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766758","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m107 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mraise\u001b[0m CliError(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766776","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m108 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[33mf\u001b[0m\u001b[33m\"\u001b[0m\u001b[33mThe requested action could not be completed: \u001b[0m\u001b[33m{\u001b[0merr\u001b[33m}\u001b[0m\u001b[33m\"\u001b[0m, \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766794","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766811","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/click/\u001b[0m\u001b[1mcore.py\u001b[0m:1442 in __call__            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766827","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766844","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1439 \u001b[0m\u001b[2m│   \u001b[0m                                                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766861","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1440 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92m__call__\u001b[0m(\u001b[96mself\u001b[0m, *args: t.Any, **kwargs: t.Any) -> t.Any:       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766878","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1441 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Alias for :meth:`main`.\"\"\"\u001b[0m                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766894","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m1442 \u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m.main(*args, **kwargs)\u001b[0m                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766911","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1443 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766928","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1444 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766943","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1445 \u001b[0m\u001b[94mclass\u001b[0m\u001b[90m \u001b[0m\u001b[4;92m_FakeSubclassCheck\u001b[0m(\u001b[96mtype\u001b[0m):                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766960","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766976","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 15 frames hidden ...                          \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.766995","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767011","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:206 in run             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767027","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767044","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m203 \u001b[0m\u001b[2m│   \u001b[0mrun_start_time = time.perf_counter()                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767061","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m204 \u001b[0m\u001b[2m│   \u001b[0msuccess = \u001b[94mFalse\u001b[0m                                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767078","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m205 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767154","level":"info","event":"                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767177","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m206 \u001b[2m│   │   \u001b[0m\u001b[94mawait\u001b[0m _run_blocks(tracker, parsed_blocks, dry_run=dry_run)     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767197","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m207 \u001b[0m\u001b[2m│   │   \u001b[0msuccess = \u001b[94mTrue\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767216","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m208 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767234","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m209 \u001b[0m\u001b[2m│   │   \u001b[0mtracker.track_command_event(CliEvent.failed)                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767251","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767268","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:266 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767285","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767302","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m263 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767318","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m264 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m tracker.with_contexts(tracking_ctx):                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767335","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m265 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mtracker.track_block_event(blk_name, BlockEvents.failed \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767351","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m266 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m CliError(\u001b[0m                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767369","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m267 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mRun invocation could not be completed as block faile\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767386","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m268 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4m) \u001b[0m\u001b[1;4;94mfrom\u001b[0m\u001b[1;4;90m \u001b[0m\u001b[1;4;96merr\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767403","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m269 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m bare_err:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767421","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767438","level":"info","event":"\u001b[1;91mCliError: \u001b[0mRun invocation could not be completed as block failed: Cannot start ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767454","level":"info","event":"plugin tap-datalake: Catalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767471","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767487","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993dd6-6fb8-7ef6-8646-6d263546fb3b.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767503","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767519","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767535","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767550","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767566","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767582","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767597","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767613","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767628","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767644","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767660","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767676","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767692","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767708","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767724","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767740","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767757","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767773","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767790","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767806","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767822","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767838","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767854","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767870","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767886","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767902","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767917","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767933","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767949","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767964","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767980","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.767998","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768014","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768030","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768046","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768062","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768078","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768093","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768109","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768125","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768142","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768158","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768174","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768190","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768205","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768223","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768240","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768256","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768272","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768290","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768307","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768324","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768340","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768356","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768373","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768389","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768405","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768421","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768437","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768452","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768468","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768484","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768499","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768515","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768531","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768547","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768563","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768579","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768595","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768610","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768626","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768642","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768658","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768673","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768689","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768705","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768720","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768736","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768751","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768767","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768782","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768797","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768813","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768829","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768844","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768860","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768877","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:28.768893","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:11:31.769538","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DockerContainerFailedException","exc_value":"Docker container failed: {'StatusCode': 1}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":500,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":377,"name":"_run_image"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":435,"name":"_run_image_with_mounts"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-12T14:01:58.805308","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T14:01:58.805800","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T14:01:58.874304","level":"info","event":"Starting docker container from image meltano-banvic:latest","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:01:59.695609","level":"info","event":"\u001b[2m2025-09-12T14:01:59.695105Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mEnvironment 'dev' is active   \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.903928","level":"info","event":"\u001b[2m2025-09-12T14:02:00.903351Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mCannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993e3b-a36f-796a-90b6-6df0b75315c8.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904030","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904069","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904091","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904111","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904132","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904150","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904170","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904189","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904207","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904225","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904242","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904260","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904277","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904295","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904316","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904336","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904354","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904373","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904394","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904415","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904437","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904459","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904480","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904502","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904523","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904544","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904565","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904586","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904606","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904628","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904650","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904672","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904693","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904714","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904735","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904756","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904776","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904798","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904819","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904840","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904860","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904880","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904898","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904914","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904932","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904951","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904970","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.904989","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905006","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905024","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905041","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905061","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905078","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905095","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905111","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.905152","level":"info","event":"\u001b[2m2025-09-12T14:02:00.903694Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mBlock run completed           \u001b[0m \u001b[36mblock_type\u001b[0m=\u001b[35mExtractLoadBlocks\u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.061\u001b[0m \u001b[36merr\u001b[0m=\u001b[35mRunnerError('Cannot start plugin tap-datalake: Catalog discovery failed: command [\\'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\\', \\'--config\\', \\'/project/.meltano/run/tap-datalake/tap.01993e3b-a36f-796a-90b6-6df0b75315c8.config.json\\', \\'--discover\\'] returned 1 with stderr:\\n Skipping parse of env var settings...\\nTraceback (most recent call last):\\n  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>\\n    sys.exit(TapCSV.cli())\\n             ^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__\\n    return self.main(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main\\n    with self.make_context(prog_name, args, **extra) as ctx:\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context\\n    self.parse_args(ctx, args)\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args\\n    value, args = param.handle_parse_result(ctx, opts, args)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result\\n    value = self.process_value(ctx, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value\\n    value = self.callback(ctx, self, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover\\n    tap.run_discovery()\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery\\n    catalog_text = self.catalog_json_text\\n                   ^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text\\n    return dump_json(self.catalog_dict, indent=2)\\n                     ^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict\\n    return t.cast(\"dict\", self._singer_catalog.to_dict())\\n                          ^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog\\n    return Catalog(\\n           ^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>\\n    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry\\n    schema=singer.Schema.from_dict(self.schema),\\n                                   ^^^^^^^^^^^\\n  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__\\n    val = self.func(instance)\\n          ^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema\\n    th.Property(column, th.StringType()) for column in self.header\\n                                                       ^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header\\n    first_file = self.get_file_paths()[0]\\n                 ^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths\\n    raise Exception(f\"File path does not exist {file_path}\")\\nException: File path does not exist load/data/latest/public-agencias.csv\\n')\u001b[0m \u001b[36mexit_codes\u001b[0m=\u001b[35m{}\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993e3b-a2dd-7e58-9ee7-20b37f2a2127\u001b[0m \u001b[36mset_number\u001b[0m=\u001b[35m0\u001b[0m \u001b[36msuccess\u001b[0m=\u001b[35mFalse\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:00.909333","level":"info","event":"\u001b[2m2025-09-12T14:02:00.908836Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mRun completed                 \u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.067\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993e3b-a2dd-7e58-9ee7-20b37f2a2127\u001b[0m \u001b[36mstatus\u001b[0m=\u001b[35mfailure\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113345","level":"info","event":"\u001b[2m2025-09-12T14:02:00.909301Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mNeed help fixing this problem? Visit http://melta.no/ for troubleshooting steps, or to join our friendly Slack community.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113425","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113458","level":"info","event":"Run invocation could not be completed as block failed: Cannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993e3b-a36f-796a-90b6-6df0b75315c8.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113483","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113506","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113525","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113545","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113566","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113584","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113603","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113621","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113640","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113659","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113677","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113703","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113721","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113738","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113756","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113773","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113789","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113805","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113822","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113838","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113857","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113877","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113898","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113918","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113939","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113958","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113974","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.113992","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114009","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114025","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114042","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114064","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114084","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114102","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114120","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114137","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114153","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114169","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114187","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114205","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114223","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114239","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114255","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114271","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114287","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114303","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114320","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114337","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114355","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114372","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114391","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114408","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114425","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114441","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114458","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114474","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114495","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:329 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114516","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114534","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m326 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114552","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m327 \u001b[0m\u001b[2m│   │   \u001b[0mstdin = asyncio.subprocess.PIPE \u001b[94mif\u001b[0m \u001b[96mself\u001b[0m.consumer \u001b[94melse\u001b[0m \u001b[94mNone\u001b[0m     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114570","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m328 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114589","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m329 \u001b[2m│   │   │   \u001b[0m\u001b[96mself\u001b[0m._process_handle = \u001b[94mawait\u001b[0m \u001b[96mself\u001b[0m.invoker.invoke_async(    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114607","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m330 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mlimit=line_length_limit,                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114624","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m331 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdin=stdin,  \u001b[2m# Singer messages\u001b[0m                        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114642","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m332 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdout=asyncio.subprocess.PIPE,  \u001b[2m# Singer state\u001b[0m        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114660","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114677","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/\u001b[0m\u001b[1mplugin_invoker.py\u001b[0m:507 in     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114694","level":"info","event":"\u001b[31m│\u001b[0m invoke_async                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114711","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114730","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33mReturns:\u001b[0m                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114747","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2;33m│   │   │   \u001b[0m\u001b[33mSubprocess.\u001b[0m                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114766","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m506 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114783","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m507 \u001b[2m│   │   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mwith\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m._invoke(*args, **kwargs)\u001b[0m \u001b[94mas\u001b[0m (                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114800","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m508 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_args,                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114817","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m509 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_options,                                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114834","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m510 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_env,                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114850","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114867","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 8 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114883","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114942","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:419 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114959","level":"info","event":"\u001b[31m│\u001b[0m _get_catalog                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114978","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.114995","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m416 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mwith\u001b[0m suppress(\u001b[96mFileNotFoundError\u001b[0m):                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115012","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m417 \u001b[0m\u001b[2m│   │   │   \u001b[0mcatalog_cache_key_path.unlink()                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115029","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m418 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115047","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m419 \u001b[2m│   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_discovery(plugin_invoker, catalog_path)\u001b[0m         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115069","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m420 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m catalog_path                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115090","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m421 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115107","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m422 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mdiscover_catalog\u001b[0m(\u001b[96mself\u001b[0m, plugin_invoker: PluginInvoker) -> \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115125","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115142","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:521 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115159","level":"info","event":"\u001b[31m│\u001b[0m run_discovery                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115176","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115192","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m518 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mif\u001b[0m exit_code != \u001b[94m0\u001b[0m:                                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115209","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m519 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mcatalog_path.unlink()                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115226","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m520 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr_buff.seek(\u001b[94m0\u001b[0m)                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115244","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m521 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m PluginExecutionError(\u001b[0m                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115262","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m522 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCatalog discovery failed: command \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4m  \u001b[0m\u001b[1;2;4m# noqa: EM10\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115279","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m523 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mplugin_invoker.exec_args(\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4;33m--discover\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4m)\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m returne\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115298","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m524 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mexit_code\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m with stderr:\u001b[0m\u001b[1;4;33m\\n\u001b[0m\u001b[1;4;33m \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mstderr_buff.read()\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m\"\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115316","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115333","level":"info","event":"\u001b[1;91mPluginExecutionError: \u001b[0mCatalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115350","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115366","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993e3b-a36f-796a-90b6-6df0b75315c8.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115382","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115398","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115414","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115430","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115447","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115463","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115480","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115495","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115511","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115527","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115543","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115559","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115575","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115590","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115606","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115622","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115639","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115656","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115672","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115688","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115704","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115721","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115737","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115753","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115768","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115785","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115801","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115817","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115833","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115848","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115864","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115879","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115895","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115912","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115928","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115944","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115961","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115977","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.115993","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116009","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116024","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116042","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116062","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116079","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116094","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116110","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116126","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116141","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116158","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116174","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116190","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116205","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116221","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116237","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116253","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116268","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116284","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116299","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116315","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116332","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116349","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116365","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116382","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116398","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116414","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116431","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116448","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116464","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116480","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116496","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116513","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116530","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116547","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116565","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116582","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116598","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116615","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116631","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116647","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116663","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116680","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116696","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116712","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116729","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116746","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116764","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116781","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116799","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116818","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116837","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116855","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116872","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116890","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116909","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:251 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116928","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116945","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m248 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116963","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m249 \u001b[0m\u001b[2m│   │   \u001b[0mblock_start_time = time.perf_counter()                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116979","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m250 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.116998","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m251 \u001b[2m│   │   │   \u001b[0m\u001b[94mawait\u001b[0m blk.run()                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117015","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m252 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m RunnerError \u001b[94mas\u001b[0m err:                                     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117032","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m253 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_end_time = time.perf_counter()                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117051","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m254 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_duration = block_end_time - block_start_time         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117073","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117090","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:502 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117107","level":"info","event":"\u001b[31m│\u001b[0m run                                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117124","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117141","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m499 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[2m# TODO: legacy `meltano elt` style logging should be depre\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117161","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m500 \u001b[0m\u001b[2m│   │   │   \u001b[0mlegacy_log_handler = \u001b[96mself\u001b[0m.output_logger.out(\u001b[33m\"\u001b[0m\u001b[33mmeltano\u001b[0m\u001b[33m\"\u001b[0m, log \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117179","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m501 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m legacy_log_handler.redirect_logging():                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117196","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m502 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_with_job()\u001b[0m                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117213","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m503 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mreturn\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117230","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94melse\u001b[0m:                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117246","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2m│   │   │   \u001b[0mlogger.warning(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117262","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117281","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 3 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117297","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117314","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:631 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117330","level":"info","event":"\u001b[31m│\u001b[0m _start_blocks                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117346","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117362","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m628 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117378","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m629 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mfor\u001b[0m block \u001b[95min\u001b[0m \u001b[96mself\u001b[0m.blocks:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117396","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m630 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.pre(\u001b[96mself\u001b[0m.context)                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117413","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m631 \u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.start()                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117430","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m632 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94myield\u001b[0m                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117446","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m633 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mfinally\u001b[0m:                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117462","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m634 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m._cleanup()\u001b[0m                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117479","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117496","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:336 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117512","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117528","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m333 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr=asyncio.subprocess.PIPE,  \u001b[2m# Log\u001b[0m                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117545","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m334 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117561","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m335 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117578","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m336 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m RunnerError(\u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCannot start plugin \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.string_id\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m: \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117596","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m337 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117612","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m338 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mstop\u001b[0m(\u001b[96mself\u001b[0m, *, kill: \u001b[96mbool\u001b[0m = \u001b[94mTrue\u001b[0m) -> \u001b[94mNone\u001b[0m:                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117630","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m339 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Stop (kill) the underlying process and cancel output proxyi\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117647","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117665","level":"info","event":"\u001b[1;91mRunnerError: \u001b[0mCannot start plugin tap-datalake: Catalog discovery failed: command","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117681","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117697","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993e3b-a36f-796a-90b6-6df0b75315c8.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117714","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117730","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117747","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117763","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117779","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117794","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117810","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117826","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117841","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117856","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117872","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117888","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117904","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117920","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117936","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117952","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117968","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.117985","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118001","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118017","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118033","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118050","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118068","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118085","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118101","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118117","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118134","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118150","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118166","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118182","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118198","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118213","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118229","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118247","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118263","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118279","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118295","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118311","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118327","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118342","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118357","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118373","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118391","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118408","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118424","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118439","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118455","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118471","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118487","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118504","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118520","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118536","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118552","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118568","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118585","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118602","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118618","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118633","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118649","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118664","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118679","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118695","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118710","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118726","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118741","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118756","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118772","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118787","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118803","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118818","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118833","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118849","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118864","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118880","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118895","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118910","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118926","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118942","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118958","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118974","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.118989","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119006","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119022","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119038","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119053","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119070","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119086","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119102","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119118","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119135","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119153","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119170","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119186","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119205","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1m__init__.py\u001b[0m:105 in _run_cli   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119223","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119241","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m102 \u001b[0m\u001b[2;33m│   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119258","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m103 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119275","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m104 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119292","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m105 \u001b[2m│   │   │   \u001b[0mcli(obj={\u001b[33m\"\u001b[0m\u001b[33mproject\u001b[0m\u001b[33m\"\u001b[0m: \u001b[94mNone\u001b[0m})                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119309","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m106 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m ProjectReadonly \u001b[94mas\u001b[0m err:                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119326","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m107 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mraise\u001b[0m CliError(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119343","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m108 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[33mf\u001b[0m\u001b[33m\"\u001b[0m\u001b[33mThe requested action could not be completed: \u001b[0m\u001b[33m{\u001b[0merr\u001b[33m}\u001b[0m\u001b[33m\"\u001b[0m, \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119363","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119379","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/click/\u001b[0m\u001b[1mcore.py\u001b[0m:1442 in __call__            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119396","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119413","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1439 \u001b[0m\u001b[2m│   \u001b[0m                                                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119429","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1440 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92m__call__\u001b[0m(\u001b[96mself\u001b[0m, *args: t.Any, **kwargs: t.Any) -> t.Any:       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119446","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1441 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Alias for :meth:`main`.\"\"\"\u001b[0m                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119462","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m1442 \u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m.main(*args, **kwargs)\u001b[0m                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119478","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1443 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119495","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1444 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119511","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1445 \u001b[0m\u001b[94mclass\u001b[0m\u001b[90m \u001b[0m\u001b[4;92m_FakeSubclassCheck\u001b[0m(\u001b[96mtype\u001b[0m):                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119527","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119543","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 15 frames hidden ...                          \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119559","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119575","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:206 in run             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119591","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119607","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m203 \u001b[0m\u001b[2m│   \u001b[0mrun_start_time = time.perf_counter()                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119623","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m204 \u001b[0m\u001b[2m│   \u001b[0msuccess = \u001b[94mFalse\u001b[0m                                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119639","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m205 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119703","level":"info","event":"                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119725","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m206 \u001b[2m│   │   \u001b[0m\u001b[94mawait\u001b[0m _run_blocks(tracker, parsed_blocks, dry_run=dry_run)     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119745","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m207 \u001b[0m\u001b[2m│   │   \u001b[0msuccess = \u001b[94mTrue\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119765","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m208 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119784","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m209 \u001b[0m\u001b[2m│   │   \u001b[0mtracker.track_command_event(CliEvent.failed)                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119802","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119823","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:266 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119841","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119858","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m263 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119874","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m264 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m tracker.with_contexts(tracking_ctx):                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119891","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m265 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mtracker.track_block_event(blk_name, BlockEvents.failed \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119908","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m266 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m CliError(\u001b[0m                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119925","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m267 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mRun invocation could not be completed as block faile\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119942","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m268 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4m) \u001b[0m\u001b[1;4;94mfrom\u001b[0m\u001b[1;4;90m \u001b[0m\u001b[1;4;96merr\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119959","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m269 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m bare_err:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119976","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.119993","level":"info","event":"\u001b[1;91mCliError: \u001b[0mRun invocation could not be completed as block failed: Cannot start ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120010","level":"info","event":"plugin tap-datalake: Catalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120027","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120044","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993e3b-a36f-796a-90b6-6df0b75315c8.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120062","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120078","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120095","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120111","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120128","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120147","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120165","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120184","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120200","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120216","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120231","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120247","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120263","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120280","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120296","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120311","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120328","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120344","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120360","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120378","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120394","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120410","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120426","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120447","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120463","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120480","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120495","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120510","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120526","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120541","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120557","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120573","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120589","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120604","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120620","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120635","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120651","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120667","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120683","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120699","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120715","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120731","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120746","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120762","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120777","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120794","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120811","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120828","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120844","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120861","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120879","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120895","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120911","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120927","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120944","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120959","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120975","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.120990","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121006","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121022","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121038","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121053","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121070","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121085","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121101","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121118","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121133","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121149","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121165","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121180","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121195","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121211","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121227","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121243","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121257","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121273","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121289","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121304","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121319","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121334","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121350","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121366","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121381","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121398","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121413","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121428","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121445","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:01.121461","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T14:02:02.043812","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DockerContainerFailedException","exc_value":"Docker container failed: {'StatusCode': 1}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":500,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":377,"name":"_run_image"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":435,"name":"_run_image_with_mounts"}],"is_group":false,"exceptions":[]}]}
