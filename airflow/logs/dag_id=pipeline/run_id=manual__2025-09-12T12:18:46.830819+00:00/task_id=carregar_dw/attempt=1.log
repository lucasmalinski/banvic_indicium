{"timestamp":"2025-09-12T12:19:05.199704","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T12:19:05.200168","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T12:19:05.294087","level":"info","event":"Starting docker container from image meltano-banvic:latest","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:06.198182","level":"info","event":"\u001b[2m2025-09-12T12:19:06.197725Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mEnvironment 'dev' is active   \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622184","level":"info","event":"\u001b[2m2025-09-12T12:19:07.621717Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mCannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993ddd-7040-7059-a953-a5c26cf35765.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622334","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622418","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622489","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622556","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622619","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622680","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622740","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622799","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622856","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622913","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.622968","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623038","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623095","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623150","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623205","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623258","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623311","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623365","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623419","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623471","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623524","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623578","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623630","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623683","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623735","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623788","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623843","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623897","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.623951","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624011","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624067","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624121","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624174","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624226","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624278","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624330","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624381","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624433","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624485","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624536","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624589","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624641","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624692","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624744","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624796","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624847","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624900","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.624953","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625011","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625064","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625117","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625169","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625222","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625278","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625332","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.625446","level":"info","event":"\u001b[2m2025-09-12T12:19:07.622185Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mBlock run completed           \u001b[0m \u001b[36mblock_type\u001b[0m=\u001b[35mExtractLoadBlocks\u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.272\u001b[0m \u001b[36merr\u001b[0m=\u001b[35mRunnerError('Cannot start plugin tap-datalake: Catalog discovery failed: command [\\'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\\', \\'--config\\', \\'/project/.meltano/run/tap-datalake/tap.01993ddd-7040-7059-a953-a5c26cf35765.config.json\\', \\'--discover\\'] returned 1 with stderr:\\n Skipping parse of env var settings...\\nTraceback (most recent call last):\\n  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>\\n    sys.exit(TapCSV.cli())\\n             ^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__\\n    return self.main(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main\\n    with self.make_context(prog_name, args, **extra) as ctx:\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context\\n    self.parse_args(ctx, args)\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args\\n    value, args = param.handle_parse_result(ctx, opts, args)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result\\n    value = self.process_value(ctx, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value\\n    value = self.callback(ctx, self, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover\\n    tap.run_discovery()\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery\\n    catalog_text = self.catalog_json_text\\n                   ^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text\\n    return dump_json(self.catalog_dict, indent=2)\\n                     ^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict\\n    return t.cast(\"dict\", self._singer_catalog.to_dict())\\n                          ^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog\\n    return Catalog(\\n           ^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>\\n    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry\\n    schema=singer.Schema.from_dict(self.schema),\\n                                   ^^^^^^^^^^^\\n  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__\\n    val = self.func(instance)\\n          ^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema\\n    th.Property(column, th.StringType()) for column in self.header\\n                                                       ^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header\\n    first_file = self.get_file_paths()[0]\\n                 ^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths\\n    raise Exception(f\"File path does not exist {file_path}\")\\nException: File path does not exist load/data/latest/public-agencias.csv\\n')\u001b[0m \u001b[36mexit_codes\u001b[0m=\u001b[35m{}\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993ddd-6fa8-71f9-a63a-46c0f9ce2750\u001b[0m \u001b[36mset_number\u001b[0m=\u001b[35m0\u001b[0m \u001b[36msuccess\u001b[0m=\u001b[35mFalse\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.629692","level":"info","event":"\u001b[2m2025-09-12T12:19:07.629324Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mRun completed                 \u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m1.28\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993ddd-6fa8-71f9-a63a-46c0f9ce2750\u001b[0m \u001b[36mstatus\u001b[0m=\u001b[35mfailure\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.873621","level":"info","event":"\u001b[2m2025-09-12T12:19:07.629847Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mNeed help fixing this problem? Visit http://melta.no/ for troubleshooting steps, or to join our friendly Slack community.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.873748","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.873824","level":"info","event":"Run invocation could not be completed as block failed: Cannot start plugin tap-datalake: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-datalake/tap.01993ddd-7040-7059-a953-a5c26cf35765.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.873894","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.873960","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874034","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874098","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874159","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874221","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874282","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874339","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874395","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874451","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874505","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874559","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874615","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874670","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874724","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874778","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874833","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874887","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.874941","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875005","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875061","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875118","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875173","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875228","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875282","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875336","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875390","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875442","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875496","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875552","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875611","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875679","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875758","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875839","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875910","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.875971","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876038","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876095","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876160","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876222","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876282","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876346","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876406","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876469","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876530","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876588","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876659","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876722","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876784","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876847","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876912","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.876968","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877035","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877091","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877144","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877200","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877268","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:329 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877341","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877401","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m326 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877460","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m327 \u001b[0m\u001b[2m│   │   \u001b[0mstdin = asyncio.subprocess.PIPE \u001b[94mif\u001b[0m \u001b[96mself\u001b[0m.consumer \u001b[94melse\u001b[0m \u001b[94mNone\u001b[0m     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877523","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m328 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877591","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m329 \u001b[2m│   │   │   \u001b[0m\u001b[96mself\u001b[0m._process_handle = \u001b[94mawait\u001b[0m \u001b[96mself\u001b[0m.invoker.invoke_async(    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877666","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m330 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mlimit=line_length_limit,                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877734","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m331 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdin=stdin,  \u001b[2m# Singer messages\u001b[0m                        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877804","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m332 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdout=asyncio.subprocess.PIPE,  \u001b[2m# Singer state\u001b[0m        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877869","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.877933","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/\u001b[0m\u001b[1mplugin_invoker.py\u001b[0m:507 in     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878007","level":"info","event":"\u001b[31m│\u001b[0m invoke_async                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878070","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878127","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33mReturns:\u001b[0m                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878185","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2;33m│   │   │   \u001b[0m\u001b[33mSubprocess.\u001b[0m                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878248","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m506 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878306","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m507 \u001b[2m│   │   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mwith\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m._invoke(*args, **kwargs)\u001b[0m \u001b[94mas\u001b[0m (                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878363","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m508 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_args,                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878419","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m509 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_options,                                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878475","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m510 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_env,                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878530","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878591","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 8 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878647","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878702","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:419 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878759","level":"info","event":"\u001b[31m│\u001b[0m _get_catalog                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878816","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878874","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m416 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mwith\u001b[0m suppress(\u001b[96mFileNotFoundError\u001b[0m):                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878931","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m417 \u001b[0m\u001b[2m│   │   │   \u001b[0mcatalog_cache_key_path.unlink()                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.878987","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m418 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879049","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m419 \u001b[2m│   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_discovery(plugin_invoker, catalog_path)\u001b[0m         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879107","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m420 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m catalog_path                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879221","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m421 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879282","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m422 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mdiscover_catalog\u001b[0m(\u001b[96mself\u001b[0m, plugin_invoker: PluginInvoker) -> \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879341","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879397","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:521 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879454","level":"info","event":"\u001b[31m│\u001b[0m run_discovery                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879509","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879564","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m518 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mif\u001b[0m exit_code != \u001b[94m0\u001b[0m:                                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879620","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m519 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mcatalog_path.unlink()                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879676","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m520 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr_buff.seek(\u001b[94m0\u001b[0m)                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879738","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m521 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m PluginExecutionError(\u001b[0m                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879796","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m522 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCatalog discovery failed: command \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4m  \u001b[0m\u001b[1;2;4m# noqa: EM10\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879853","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m523 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mplugin_invoker.exec_args(\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4;33m--discover\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4m)\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m returne\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879912","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m524 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mexit_code\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m with stderr:\u001b[0m\u001b[1;4;33m\\n\u001b[0m\u001b[1;4;33m \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mstderr_buff.read()\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m\"\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.879970","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880033","level":"info","event":"\u001b[1;91mPluginExecutionError: \u001b[0mCatalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880087","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880141","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993ddd-7040-7059-a953-a5c26cf35765.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880194","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880247","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880301","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880354","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880408","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880461","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880515","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880568","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880621","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880675","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880729","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880781","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880834","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880887","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880940","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.880997","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881052","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881105","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881158","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881213","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881267","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881320","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881372","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881425","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881479","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881532","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881585","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881638","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881690","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881743","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881797","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881850","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881903","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.881957","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882014","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882114","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882175","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882203","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882227","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882250","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882271","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882291","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882311","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882330","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882351","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882371","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882392","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882416","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882442","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882474","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882509","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882555","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882602","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882645","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882673","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882699","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882729","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882755","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882778","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882802","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882826","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882849","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882873","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882901","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882925","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882949","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.882972","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883007","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883035","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883059","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883085","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883111","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883135","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883157","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883178","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883198","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883220","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883243","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883267","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883290","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883311","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883332","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883355","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883383","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883423","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883457","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883482","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883509","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883534","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883563","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883591","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883618","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883647","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883686","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:251 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883715","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883745","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m248 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883769","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m249 \u001b[0m\u001b[2m│   │   \u001b[0mblock_start_time = time.perf_counter()                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883792","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m250 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883828","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m251 \u001b[2m│   │   │   \u001b[0m\u001b[94mawait\u001b[0m blk.run()                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883851","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m252 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m RunnerError \u001b[94mas\u001b[0m err:                                     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883874","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m253 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_end_time = time.perf_counter()                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883898","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m254 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_duration = block_end_time - block_start_time         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883920","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883947","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:502 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.883971","level":"info","event":"\u001b[31m│\u001b[0m run                                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884007","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884035","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m499 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[2m# TODO: legacy `meltano elt` style logging should be depre\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884090","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m500 \u001b[0m\u001b[2m│   │   │   \u001b[0mlegacy_log_handler = \u001b[96mself\u001b[0m.output_logger.out(\u001b[33m\"\u001b[0m\u001b[33mmeltano\u001b[0m\u001b[33m\"\u001b[0m, log \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884120","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m501 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m legacy_log_handler.redirect_logging():                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884144","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m502 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_with_job()\u001b[0m                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884167","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m503 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mreturn\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884192","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94melse\u001b[0m:                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884217","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2m│   │   │   \u001b[0mlogger.warning(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884240","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884262","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 3 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884285","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884315","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:631 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884340","level":"info","event":"\u001b[31m│\u001b[0m _start_blocks                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884361","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884382","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m628 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884407","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m629 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mfor\u001b[0m block \u001b[95min\u001b[0m \u001b[96mself\u001b[0m.blocks:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884433","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m630 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.pre(\u001b[96mself\u001b[0m.context)                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884456","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m631 \u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.start()                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884480","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m632 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94myield\u001b[0m                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884502","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m633 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mfinally\u001b[0m:                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884524","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m634 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m._cleanup()\u001b[0m                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884546","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884567","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:336 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884592","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884614","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m333 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr=asyncio.subprocess.PIPE,  \u001b[2m# Log\u001b[0m                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884635","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m334 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884656","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m335 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884676","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m336 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m RunnerError(\u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCannot start plugin \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.string_id\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m: \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884698","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m337 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884718","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m338 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mstop\u001b[0m(\u001b[96mself\u001b[0m, *, kill: \u001b[96mbool\u001b[0m = \u001b[94mTrue\u001b[0m) -> \u001b[94mNone\u001b[0m:                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884738","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m339 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Stop (kill) the underlying process and cancel output proxyi\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884757","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884777","level":"info","event":"\u001b[1;91mRunnerError: \u001b[0mCannot start plugin tap-datalake: Catalog discovery failed: command","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884796","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884815","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993ddd-7040-7059-a953-a5c26cf35765.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884833","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884852","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884872","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884891","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884911","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884932","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884954","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884974","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.884998","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885019","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885039","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885059","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885079","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885098","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885117","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885137","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885156","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885176","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885195","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885214","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885233","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885255","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885275","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885295","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885316","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885337","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885358","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885378","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885397","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885415","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885434","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885453","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885471","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885490","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885509","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885529","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885548","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885566","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885585","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885604","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885623","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885642","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885661","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885679","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885698","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885716","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885735","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885753","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885772","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885790","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885809","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885827","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885846","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885865","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885884","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885903","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885921","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885940","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885958","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.885976","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886005","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886024","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886043","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886062","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886081","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886099","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886119","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886137","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886156","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886174","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886192","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886211","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886229","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886248","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886267","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886285","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886304","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886324","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886342","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886360","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886379","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886397","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886417","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886435","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886453","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886471","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886490","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886510","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886529","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886550","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886571","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886592","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886612","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886635","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1m__init__.py\u001b[0m:105 in _run_cli   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886655","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886675","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m102 \u001b[0m\u001b[2;33m│   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886696","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m103 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886717","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m104 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886737","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m105 \u001b[2m│   │   │   \u001b[0mcli(obj={\u001b[33m\"\u001b[0m\u001b[33mproject\u001b[0m\u001b[33m\"\u001b[0m: \u001b[94mNone\u001b[0m})                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886757","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m106 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m ProjectReadonly \u001b[94mas\u001b[0m err:                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886777","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m107 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mraise\u001b[0m CliError(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886797","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m108 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[33mf\u001b[0m\u001b[33m\"\u001b[0m\u001b[33mThe requested action could not be completed: \u001b[0m\u001b[33m{\u001b[0merr\u001b[33m}\u001b[0m\u001b[33m\"\u001b[0m, \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886818","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886839","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/click/\u001b[0m\u001b[1mcore.py\u001b[0m:1442 in __call__            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886859","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886878","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1439 \u001b[0m\u001b[2m│   \u001b[0m                                                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886898","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1440 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92m__call__\u001b[0m(\u001b[96mself\u001b[0m, *args: t.Any, **kwargs: t.Any) -> t.Any:       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886918","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1441 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Alias for :meth:`main`.\"\"\"\u001b[0m                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886938","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m1442 \u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m.main(*args, **kwargs)\u001b[0m                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886960","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1443 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.886980","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1444 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887003","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1445 \u001b[0m\u001b[94mclass\u001b[0m\u001b[90m \u001b[0m\u001b[4;92m_FakeSubclassCheck\u001b[0m(\u001b[96mtype\u001b[0m):                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887024","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887044","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 15 frames hidden ...                          \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887064","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887083","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:206 in run             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887103","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887122","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m203 \u001b[0m\u001b[2m│   \u001b[0mrun_start_time = time.perf_counter()                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887142","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m204 \u001b[0m\u001b[2m│   \u001b[0msuccess = \u001b[94mFalse\u001b[0m                                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887161","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m205 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887251","level":"info","event":"                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887284","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m206 \u001b[2m│   │   \u001b[0m\u001b[94mawait\u001b[0m _run_blocks(tracker, parsed_blocks, dry_run=dry_run)     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887307","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m207 \u001b[0m\u001b[2m│   │   \u001b[0msuccess = \u001b[94mTrue\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887330","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m208 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887352","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m209 \u001b[0m\u001b[2m│   │   \u001b[0mtracker.track_command_event(CliEvent.failed)                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887373","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887394","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:266 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887416","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887436","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m263 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887456","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m264 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m tracker.with_contexts(tracking_ctx):                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887476","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m265 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mtracker.track_block_event(blk_name, BlockEvents.failed \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887497","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m266 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m CliError(\u001b[0m                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887517","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m267 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mRun invocation could not be completed as block faile\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887538","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m268 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4m) \u001b[0m\u001b[1;4;94mfrom\u001b[0m\u001b[1;4;90m \u001b[0m\u001b[1;4;96merr\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887558","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m269 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m bare_err:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887578","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887599","level":"info","event":"\u001b[1;91mCliError: \u001b[0mRun invocation could not be completed as block failed: Cannot start ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887619","level":"info","event":"plugin tap-datalake: Catalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887639","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887660","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-datalake/tap.01993ddd-7040-7059-a953-a5c26cf35765.con\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887681","level":"info","event":"\u001b[32mfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887701","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887722","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887742","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887763","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887784","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887804","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887824","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887845","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887866","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887887","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887907","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887927","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887947","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887967","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.887987","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888013","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888036","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888058","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888078","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888100","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888122","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888143","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888164","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888186","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888214","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888234","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888252","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888270","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888289","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888308","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888329","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888350","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888369","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888388","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888408","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888427","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888446","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888464","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888484","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888503","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888522","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888541","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888559","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888577","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888596","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888614","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888632","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888651","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.888669","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891718","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891792","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891824","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891850","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891875","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891897","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891918","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891938","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891958","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.891978","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892006","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892027","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892046","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892066","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892085","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892105","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892123","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892142","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892162","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892181","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892200","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892219","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892238","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892258","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892277","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892296","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892314","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892333","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892352","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892370","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892390","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892409","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892428","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892447","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892466","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892485","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892505","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:07.892524","level":"info","event":"Exception: File path does not exist load/data/latest/public-agencias.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T12:19:09.017374","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DockerContainerFailedException","exc_value":"Docker container failed: {'StatusCode': 1}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":500,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":377,"name":"_run_image"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":435,"name":"_run_image_with_mounts"}],"is_group":false,"exceptions":[]}]}
