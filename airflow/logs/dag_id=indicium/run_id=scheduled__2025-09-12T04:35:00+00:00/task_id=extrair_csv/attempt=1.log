{"timestamp":"2025-09-12T05:47:35.733168","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T05:47:35.733926","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/indicium.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T05:47:36.788089Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T05:47:36.788237Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T05:47:36.788417Z","level":"info","event":"Current task name:extrair_csv","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T05:47:36.788493Z","level":"info","event":"Dag name:indicium","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T05:47:36.793035","level":"error","event":"Failed to establish connection to Docker host unix://var/run/docker.sock: Error while fetching server API version: ('Connection aborted.', PermissionError(13, 'Permission denied'))","logger":"airflow.task.hooks.airflow.providers.docker.hooks.docker.DockerHook"}
{"timestamp":"2025-09-12T05:47:36.793204","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"AirflowException","exc_value":"Failed to establish connection to any given Docker hosts.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":482,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":356,"name":"cli"},{"filename":"/usr/local/lib/python3.12/functools.py","lineno":998,"name":"__get__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/hooks/docker.py","lineno":161,"name":"api_client"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-12T05:47:36.823333Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T05:47:36.823842Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T05:47:36.824007Z","level":"info","event":"Task:<Task(DockerOperator): extrair_csv>","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T05:47:36.824105Z","level":"info","event":"Failure caused by Failed to establish connection to any given Docker hosts.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:33.452082","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T06:11:33.452737","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/indicium.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T06:11:33.928398Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:33.928672Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:33.928906Z","level":"info","event":"Current task name:extrair_csv","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:33.929041Z","level":"info","event":"Dag name:indicium","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:33.975675","level":"info","event":"Starting docker container from image meltano-banvic:latest","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:33.982766","level":"warning","event":"Using remote engine or docker-in-docker and mounting temporary volume from host is not supported. Falling back to `mount_tmp_dir=False` mode. You can set `mount_tmp_dir` parameter to False to disable mounting and remove the warning","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:35.548078","level":"info","event":"Usage: meltano [OPTIONS] COMMAND [ARGS]...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:35.548402","level":"info","event":"Try 'meltano --help' for help.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:35.550006","level":"info","event":"Error: No such command 'meltano'.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:35.550120","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:35.550245","level":"info","event":"Did you mean one of these?","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:35.550313","level":"info","event":"    elt","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:11:35.957656","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DockerContainerFailedException","exc_value":"Docker container failed: {'StatusCode': 2}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":500,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":374,"name":"_run_image"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":435,"name":"_run_image_with_mounts"}],"is_group":false,"exceptions":[]},{"exc_type":"APIError","exc_value":"400 Client Error for http+docker://localhost/v1.51/containers/create: Bad Request (\"invalid mount config for type \"bind\": bind source path does not exist: /tmp/airflowtmpax1zrqc2\")","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":365,"name":"_run_image"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":392,"name":"_run_image_with_mounts"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/docker/api/container.py","lineno":440,"name":"create_container"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/docker/api/container.py","lineno":457,"name":"create_container_from_config"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/docker/api/client.py","lineno":281,"name":"_result"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/docker/api/client.py","lineno":277,"name":"_raise_for_status"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/docker/errors.py","lineno":39,"name":"create_api_error_from_http_exception"}],"is_group":false,"exceptions":[]},{"exc_type":"HTTPError","exc_value":"400 Client Error: Bad Request for url: http+docker://localhost/v1.51/containers/create","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/docker/api/client.py","lineno":275,"name":"_raise_for_status"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/requests/models.py","lineno":1026,"name":"raise_for_status"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-12T06:11:35.993856Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:35.994238Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:35.994353Z","level":"info","event":"Task:<Task(DockerOperator): extrair_csv>","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:11:35.994497Z","level":"info","event":"Failure caused by Docker container failed: {'StatusCode': 2}","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-12T06:23:26.009598","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T06:23:26.010281","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/indicium.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T06:23:27.374034","level":"info","event":"Starting docker container from image meltano-banvic:latest","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:30.844771","level":"info","event":"\u001b[2m2025-09-12T06:23:30.843927Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mEnvironment 'dev' is active   \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.016901","level":"info","event":"\u001b[2m2025-09-12T06:23:37.015735Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mCannot start plugin tap-transacoes: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-transacoes/tap.01993c97-e42d-7307-a831-38bf165e1310.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017339","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017456","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017529","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017594","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017712","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017791","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017850","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017894","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.017930","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018012","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018068","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018117","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018165","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018223","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018275","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018329","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018382","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018432","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018496","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018558","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018622","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018709","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018788","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018864","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.018940","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019012","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019081","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019146","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019204","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019271","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019332","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019392","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019453","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019516","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019580","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019644","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019791","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019875","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.019942","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020004","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020068","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020130","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020386","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020460","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020529","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020599","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020710","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020779","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020842","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020909","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.020973","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.021046","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.021122","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.021193","level":"info","event":"Exception: File path does not exist extract/data/transacoes.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.021254","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.021519","level":"info","event":"\u001b[2m2025-09-12T06:23:37.017481Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mBlock run completed           \u001b[0m \u001b[36mblock_type\u001b[0m=\u001b[35mExtractLoadBlocks\u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m5.848\u001b[0m \u001b[36merr\u001b[0m=\u001b[35mRunnerError('Cannot start plugin tap-transacoes: Catalog discovery failed: command [\\'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\\', \\'--config\\', \\'/project/.meltano/run/tap-transacoes/tap.01993c97-e42d-7307-a831-38bf165e1310.config.json\\', \\'--discover\\'] returned 1 with stderr:\\n Skipping parse of env var settings...\\nTraceback (most recent call last):\\n  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>\\n    sys.exit(TapCSV.cli())\\n             ^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__\\n    return self.main(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main\\n    with self.make_context(prog_name, args, **extra) as ctx:\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context\\n    self.parse_args(ctx, args)\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args\\n    value, args = param.handle_parse_result(ctx, opts, args)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result\\n    value = self.process_value(ctx, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value\\n    value = self.callback(ctx, self, value)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover\\n    tap.run_discovery()\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery\\n    catalog_text = self.catalog_json_text\\n                   ^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text\\n    return dump_json(self.catalog_dict, indent=2)\\n                     ^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict\\n    return t.cast(\"dict\", self._singer_catalog.to_dict())\\n                          ^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog\\n    return Catalog(\\n           ^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>\\n    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry\\n    schema=singer.Schema.from_dict(self.schema),\\n                                   ^^^^^^^^^^^\\n  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__\\n    val = self.func(instance)\\n          ^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema\\n    th.Property(column, th.StringType()) for column in self.header\\n                                                       ^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header\\n    first_file = self.get_file_paths()[0]\\n                 ^^^^^^^^^^^^^^^^^^^^^\\n  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths\\n    raise Exception(f\"File path does not exist {file_path}\")\\nException: File path does not exist extract/data/transacoes.csv\\n')\u001b[0m \u001b[36mexit_codes\u001b[0m=\u001b[35m{}\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993c97-e2b8-736a-b6dc-313a81e99943\u001b[0m \u001b[36mset_number\u001b[0m=\u001b[35m0\u001b[0m \u001b[36msuccess\u001b[0m=\u001b[35mFalse\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.035906","level":"info","event":"\u001b[2m2025-09-12T06:23:37.035213Z\u001b[0m [\u001b[32m\u001b[1minfo     \u001b[0m] \u001b[1mRun completed                 \u001b[0m \u001b[36mduration_seconds\u001b[0m=\u001b[35m5.866\u001b[0m \u001b[36mrun_id\u001b[0m=\u001b[35m01993c97-e2b8-736a-b6dc-313a81e99943\u001b[0m \u001b[36mstatus\u001b[0m=\u001b[35mfailure\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.573242","level":"info","event":"\u001b[2m2025-09-12T06:23:37.037275Z\u001b[0m [\u001b[31m\u001b[1merror    \u001b[0m] \u001b[1mNeed help fixing this problem? Visit http://melta.no/ for troubleshooting steps, or to join our friendly Slack community.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.573397","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.573474","level":"info","event":"Run invocation could not be completed as block failed: Cannot start plugin tap-transacoes: Catalog discovery failed: command ['/project/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/project/.meltano/run/tap-transacoes/tap.01993c97-e42d-7307-a831-38bf165e1310.config.json', '--discover'] returned 1 with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.573538","level":"info","event":" Skipping parse of env var settings...","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.573593","level":"info","event":"Traceback (most recent call last):","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.573653","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 10, in <module>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.573872","level":"info","event":"    sys.exit(TapCSV.cli())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574015","level":"info","event":"             ^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574145","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1442, in __call__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574271","level":"info","event":"    return self.main(*args, **kwargs)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574381","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574479","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1362, in main","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574575","level":"info","event":"    with self.make_context(prog_name, args, **extra) as ctx:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574666","level":"info","event":"         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574766","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1186, in make_context","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574865","level":"info","event":"    self.parse_args(ctx, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.574953","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 1197, in parse_args","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575035","level":"info","event":"    value, args = param.handle_parse_result(ctx, opts, args)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575117","level":"info","event":"                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575196","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2416, in handle_parse_result","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575276","level":"info","event":"    value = self.process_value(ctx, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575487","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575594","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/core.py\", line 2355, in process_value","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575671","level":"info","event":"    value = self.callback(ctx, self, value)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575745","level":"info","event":"            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575814","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 586, in cb_discover","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575871","level":"info","event":"    tap.run_discovery()","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575929","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 323, in run_discovery","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.575981","level":"info","event":"    catalog_text = self.catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576031","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576082","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 343, in catalog_json_text","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576137","level":"info","event":"    return dump_json(self.catalog_dict, indent=2)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576196","level":"info","event":"                     ^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576254","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 334, in catalog_dict","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576306","level":"info","event":"    return t.cast(\"dict\", self._singer_catalog.to_dict())","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576341","level":"info","event":"                          ^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576391","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 352, in _singer_catalog","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576445","level":"info","event":"    return Catalog(","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576495","level":"info","event":"           ^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576548","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/tap_base.py\", line 353, in <genexpr>","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576610","level":"info","event":"    (stream.tap_stream_id, stream._singer_catalog_entry)  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576669","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576727","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_sdk/streams/core.py\", line 668, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576786","level":"info","event":"    schema=singer.Schema.from_dict(self.schema),","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576842","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576900","level":"info","event":"  File \"/usr/local/lib/python3.12/functools.py\", line 998, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.576955","level":"info","event":"    val = self.func(instance)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577012","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577071","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 169, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577120","level":"info","event":"    th.Property(column, th.StringType()) for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577154","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577185","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 143, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577236","level":"info","event":"    first_file = self.get_file_paths()[0]","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577291","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577343","level":"info","event":"  File \"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/client.py\", line 94, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577394","level":"info","event":"    raise Exception(f\"File path does not exist {file_path}\")","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577453","level":"info","event":"Exception: File path does not exist extract/data/transacoes.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577516","level":"info","event":"\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577580","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577651","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:329 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577718","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577777","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m326 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577832","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m327 \u001b[0m\u001b[2m│   │   \u001b[0mstdin = asyncio.subprocess.PIPE \u001b[94mif\u001b[0m \u001b[96mself\u001b[0m.consumer \u001b[94melse\u001b[0m \u001b[94mNone\u001b[0m     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577887","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m328 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577948","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m329 \u001b[2m│   │   │   \u001b[0m\u001b[96mself\u001b[0m._process_handle = \u001b[94mawait\u001b[0m \u001b[96mself\u001b[0m.invoker.invoke_async(    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.577999","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m330 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mlimit=line_length_limit,                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578041","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m331 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdin=stdin,  \u001b[2m# Singer messages\u001b[0m                        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578080","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m332 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstdout=asyncio.subprocess.PIPE,  \u001b[2m# Singer state\u001b[0m        \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578114","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578155","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/\u001b[0m\u001b[1mplugin_invoker.py\u001b[0m:507 in     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578211","level":"info","event":"\u001b[31m│\u001b[0m invoke_async                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578269","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578355","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33mReturns:\u001b[0m                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578396","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2;33m│   │   │   \u001b[0m\u001b[33mSubprocess.\u001b[0m                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578444","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m506 \u001b[0m\u001b[2;33m│   │   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578500","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m507 \u001b[2m│   │   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mwith\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m._invoke(*args, **kwargs)\u001b[0m \u001b[94mas\u001b[0m (                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578560","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m508 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_args,                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578617","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m509 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_options,                                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578686","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m510 \u001b[0m\u001b[2m│   │   │   \u001b[0mpopen_env,                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578732","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578764","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 8 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578795","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578923","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:419 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.578997","level":"info","event":"\u001b[31m│\u001b[0m _get_catalog                                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579063","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579120","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m416 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mwith\u001b[0m suppress(\u001b[96mFileNotFoundError\u001b[0m):                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579180","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m417 \u001b[0m\u001b[2m│   │   │   \u001b[0mcatalog_cache_key_path.unlink()                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579237","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m418 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579294","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m419 \u001b[2m│   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_discovery(plugin_invoker, catalog_path)\u001b[0m         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579350","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m420 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m catalog_path                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579408","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m421 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579462","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m422 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mdiscover_catalog\u001b[0m(\u001b[96mself\u001b[0m, plugin_invoker: PluginInvoker) -> \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579516","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579572","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/plugin/singer/\u001b[0m\u001b[1mtap.py\u001b[0m:521 in  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579628","level":"info","event":"\u001b[31m│\u001b[0m run_discovery                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579693","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579751","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m518 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mif\u001b[0m exit_code != \u001b[94m0\u001b[0m:                                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579807","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m519 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mcatalog_path.unlink()                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579862","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m520 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr_buff.seek(\u001b[94m0\u001b[0m)                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579929","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m521 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m PluginExecutionError(\u001b[0m                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.579988","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m522 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCatalog discovery failed: command \u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4m  \u001b[0m\u001b[1;2;4m# noqa: EM10\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580046","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m523 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mplugin_invoker.exec_args(\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4;33m--discover\u001b[0m\u001b[1;4;33m'\u001b[0m\u001b[1;4m)\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m returne\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580110","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m524 \u001b[0m\u001b[2m│   │   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mexit_code\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m with stderr:\u001b[0m\u001b[1;4;33m\\n\u001b[0m\u001b[1;4;33m \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4mstderr_buff.read()\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m\"\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580169","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580225","level":"info","event":"\u001b[1;91mPluginExecutionError: \u001b[0mCatalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580287","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580344","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-transacoes/tap.01993c97-e42d-7307-a831-38bf165e1310.c\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580401","level":"info","event":"\u001b[32monfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580470","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580526","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580583","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580654","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580740","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580815","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580889","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.580959","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581016","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581079","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581143","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581201","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581257","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581315","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581370","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581420","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581482","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581539","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581588","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581633","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581706","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581779","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581841","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581899","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581950","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.581983","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582029","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582087","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582143","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582197","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582258","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582317","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582380","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582424","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582463","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582497","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582526","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582559","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582608","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582664","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582723","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582761","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582806","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582837","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582866","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582912","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.582962","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583012","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583064","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583121","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583175","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583228","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583282","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583341","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583397","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583450","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583500","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583554","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583606","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583657","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583716","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583764","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583818","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583875","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583933","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.583988","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584037","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584072","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584101","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584137","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584188","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584231","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584259","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584286","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584315","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584346","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584377","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584409","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584463","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584513","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584561","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584611","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584659","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584713","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584762","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584812","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584862","level":"info","event":"Exception: File path does not exist extract/data/transacoes.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584912","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.584964","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585017","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585072","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585128","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585193","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:251 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585249","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585303","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m248 \u001b[0m\u001b[2m│   │   \u001b[0m                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585356","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m249 \u001b[0m\u001b[2m│   │   \u001b[0mblock_start_time = time.perf_counter()                         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585411","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m250 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585468","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m251 \u001b[2m│   │   │   \u001b[0m\u001b[94mawait\u001b[0m blk.run()                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585526","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m252 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m RunnerError \u001b[94mas\u001b[0m err:                                     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585588","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m253 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_end_time = time.perf_counter()                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585645","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m254 \u001b[0m\u001b[2m│   │   │   \u001b[0mblock_duration = block_end_time - block_start_time         \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585709","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585767","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:502 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585819","level":"info","event":"\u001b[31m│\u001b[0m run                                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585851","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585880","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m499 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[2m# TODO: legacy `meltano elt` style logging should be depre\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.585975","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m500 \u001b[0m\u001b[2m│   │   │   \u001b[0mlegacy_log_handler = \u001b[96mself\u001b[0m.output_logger.out(\u001b[33m\"\u001b[0m\u001b[33mmeltano\u001b[0m\u001b[33m\"\u001b[0m, log \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586034","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m501 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m legacy_log_handler.redirect_logging():                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586088","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m502 \u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.run_with_job()\u001b[0m                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586141","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m503 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mreturn\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586194","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m504 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94melse\u001b[0m:                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586246","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m505 \u001b[0m\u001b[2m│   │   │   \u001b[0mlogger.warning(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586298","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586351","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 3 frames hidden ...                           \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586402","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586453","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1mextract_load.py\u001b[0m:631 in \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586505","level":"info","event":"\u001b[31m│\u001b[0m _start_blocks                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586560","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586620","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m628 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586690","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m629 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mfor\u001b[0m block \u001b[95min\u001b[0m \u001b[96mself\u001b[0m.blocks:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586754","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m630 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.pre(\u001b[96mself\u001b[0m.context)                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586795","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m631 \u001b[2m│   │   │   │   \u001b[0m\u001b[94mawait\u001b[0m block.start()                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586829","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m632 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94myield\u001b[0m                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586861","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m633 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mfinally\u001b[0m:                                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586905","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m634 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mawait\u001b[0m\u001b[1;4m \u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m._cleanup()\u001b[0m                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.586962","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587016","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/core/block/\u001b[0m\u001b[1msinger.py\u001b[0m:336 in start \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587070","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587122","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m333 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mstderr=asyncio.subprocess.PIPE,  \u001b[2m# Log\u001b[0m                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587179","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m334 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587234","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m335 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587288","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m336 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m RunnerError(\u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mCannot start plugin \u001b[0m\u001b[1;4;33m{\u001b[0m\u001b[1;4;96mself\u001b[0m\u001b[1;4m.string_id\u001b[0m\u001b[1;4;33m}\u001b[0m\u001b[1;4;33m: \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587346","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m337 \u001b[0m\u001b[2m│   \u001b[0m                                                                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587407","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m338 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94masync\u001b[0m \u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92mstop\u001b[0m(\u001b[96mself\u001b[0m, *, kill: \u001b[96mbool\u001b[0m = \u001b[94mTrue\u001b[0m) -> \u001b[94mNone\u001b[0m:                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587465","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m339 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Stop (kill) the underlying process and cancel output proxyi\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587519","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587596","level":"info","event":"\u001b[1;91mRunnerError: \u001b[0mCannot start plugin tap-transacoes: Catalog discovery failed: ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587663","level":"info","event":"command \u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587753","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-transacoes/tap.01993c97-e42d-7307-a831-38bf165e1310.c\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587804","level":"info","event":"\u001b[32monfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587857","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587917","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.587973","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588031","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588098","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588161","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588220","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588273","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588326","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588379","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588430","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588485","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588548","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588600","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588661","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588732","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588782","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588833","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588886","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588936","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.588997","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589052","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589108","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589167","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589228","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589290","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589348","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589406","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589465","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589523","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589578","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589621","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589655","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589702","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589761","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589815","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589868","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589921","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.589972","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590025","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590079","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590137","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590190","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590243","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590297","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590351","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590394","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590427","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590461","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590539","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590732","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590839","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.590930","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591019","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591102","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591182","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591261","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591339","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591417","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591496","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591573","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591650","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591736","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591817","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591893","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.591970","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592048","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592125","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592204","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592281","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592358","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592436","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592512","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592588","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592663","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592755","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592835","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592912","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.592989","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593065","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593141","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593219","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593295","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593374","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593455","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593537","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593621","level":"info","event":"Exception: File path does not exist extract/data/transacoes.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593765","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593856","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593901","level":"info","event":"\u001b[3mThe above exception was the direct cause of the following exception:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593939","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.593972","level":"info","event":"\u001b[31m╭─\u001b[0m\u001b[31m────────────────────\u001b[0m\u001b[31m \u001b[0m\u001b[1;31mTraceback \u001b[0m\u001b[1;2;31m(most recent call last)\u001b[0m\u001b[31m \u001b[0m\u001b[31m─────────────────────\u001b[0m\u001b[31m─╮\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594013","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1m__init__.py\u001b[0m:105 in _run_cli   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594047","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594080","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m102 \u001b[0m\u001b[2;33m│   \u001b[0m\u001b[33m\"\"\"\u001b[0m                                                                \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594112","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m103 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:                                                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594143","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m104 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mtry\u001b[0m:                                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594172","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m105 \u001b[2m│   │   │   \u001b[0mcli(obj={\u001b[33m\"\u001b[0m\u001b[33mproject\u001b[0m\u001b[33m\"\u001b[0m: \u001b[94mNone\u001b[0m})                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594203","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m106 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m ProjectReadonly \u001b[94mas\u001b[0m err:                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594240","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m107 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mraise\u001b[0m CliError(                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594270","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m108 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[33mf\u001b[0m\u001b[33m\"\u001b[0m\u001b[33mThe requested action could not be completed: \u001b[0m\u001b[33m{\u001b[0merr\u001b[33m}\u001b[0m\u001b[33m\"\u001b[0m, \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594303","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594342","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/click/\u001b[0m\u001b[1mcore.py\u001b[0m:1442 in __call__            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594388","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594437","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1439 \u001b[0m\u001b[2m│   \u001b[0m                                                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594501","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1440 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mdef\u001b[0m\u001b[90m \u001b[0m\u001b[92m__call__\u001b[0m(\u001b[96mself\u001b[0m, *args: t.Any, **kwargs: t.Any) -> t.Any:       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594573","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1441 \u001b[0m\u001b[2;90m│   │   \u001b[0m\u001b[33m\"\"\"Alias for :meth:`main`.\"\"\"\u001b[0m                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594641","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m1442 \u001b[2m│   │   \u001b[0m\u001b[94mreturn\u001b[0m \u001b[1;4;96mself\u001b[0m\u001b[1;4m.main(*args, **kwargs)\u001b[0m                             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594723","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1443 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594765","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1444 \u001b[0m                                                                      \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594848","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m1445 \u001b[0m\u001b[94mclass\u001b[0m\u001b[90m \u001b[0m\u001b[4;92m_FakeSubclassCheck\u001b[0m(\u001b[96mtype\u001b[0m):                                       \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594891","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                                                                            \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594925","level":"info","event":"\u001b[31m│\u001b[0m \u001b[3;31m                          ... 15 frames hidden ...                          \u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.594959","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595006","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:206 in run             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595041","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595074","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m203 \u001b[0m\u001b[2m│   \u001b[0mrun_start_time = time.perf_counter()                               \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595105","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m204 \u001b[0m\u001b[2m│   \u001b[0msuccess = \u001b[94mFalse\u001b[0m                                                    \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595136","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m205 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mtry\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595365","level":"info","event":"             \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595417","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m206 \u001b[2m│   │   \u001b[0m\u001b[94mawait\u001b[0m _run_blocks(tracker, parsed_blocks, dry_run=dry_run)     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595452","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m207 \u001b[0m\u001b[2m│   │   \u001b[0msuccess = \u001b[94mTrue\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595483","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m208 \u001b[0m\u001b[2m│   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m err:                                           \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595515","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m209 \u001b[0m\u001b[2m│   │   \u001b[0mtracker.track_command_event(CliEvent.failed)                   \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595546","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595574","level":"info","event":"\u001b[31m│\u001b[0m \u001b[2m/venv/lib/python3.12/site-packages/meltano/cli/\u001b[0m\u001b[1mrun.py\u001b[0m:266 in _run_blocks     \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595603","level":"info","event":"\u001b[31m│\u001b[0m                                                                              \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595631","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m263 \u001b[0m\u001b[2m│   │   │   \u001b[0m)                                                          \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595660","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m264 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[94mwith\u001b[0m tracker.with_contexts(tracking_ctx):                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595699","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m265 \u001b[0m\u001b[2m│   │   │   │   \u001b[0mtracker.track_block_event(blk_name, BlockEvents.failed \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595730","level":"info","event":"\u001b[31m│\u001b[0m \u001b[31m❱ \u001b[0m266 \u001b[2m│   │   │   \u001b[0m\u001b[1;4;94mraise\u001b[0m\u001b[1;4m CliError(\u001b[0m                                            \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595762","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m267 \u001b[0m\u001b[2m│   │   │   │   \u001b[0m\u001b[1;4;33mf\u001b[0m\u001b[1;4;33m\"\u001b[0m\u001b[1;4;33mRun invocation could not be completed as block faile\u001b[0m \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595791","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m268 \u001b[0m\u001b[2m│   │   │   \u001b[0m\u001b[1;4m) \u001b[0m\u001b[1;4;94mfrom\u001b[0m\u001b[1;4;90m \u001b[0m\u001b[1;4;96merr\u001b[0m                                                 \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595821","level":"info","event":"\u001b[31m│\u001b[0m   \u001b[2m269 \u001b[0m\u001b[2m│   │   \u001b[0m\u001b[94mexcept\u001b[0m \u001b[96mException\u001b[0m \u001b[94mas\u001b[0m bare_err:                                  \u001b[31m│\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595852","level":"info","event":"\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595882","level":"info","event":"\u001b[1;91mCliError: \u001b[0mRun invocation could not be completed as block failed: Cannot start ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595912","level":"info","event":"plugin tap-transacoes: Catalog discovery failed: command ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595942","level":"info","event":"\u001b[1m[\u001b[0m\u001b[32m'/project/.meltano/extractors/tap-csv/venv/bin/tap-csv'\u001b[0m, \u001b[32m'--config'\u001b[0m, ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.595976","level":"info","event":"\u001b[32m'/project/.meltano/run/tap-transacoes/tap.01993c97-e42d-7307-a831-38bf165e1310.c\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596005","level":"info","event":"\u001b[32monfig.json'\u001b[0m, \u001b[32m'--discover'\u001b[0m\u001b[1m]\u001b[0m returned \u001b[1;36m1\u001b[0m with stderr:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596036","level":"info","event":" Skipping parse of env var settings\u001b[33m...\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596069","level":"info","event":"Traceback \u001b[1m(\u001b[0mmost recent call last\u001b[1m)\u001b[0m:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596099","level":"info","event":"  File \u001b[32m\"/project/.meltano/extractors/tap-csv/venv/bin/tap-csv\"\u001b[0m, line \u001b[1;36m10\u001b[0m, in ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596156","level":"info","event":"\u001b[1m<\u001b[0m\u001b[1;95mmodule\u001b[0m\u001b[39m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596187","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35msys.exit\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;35mTapCSV.cli\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596215","level":"info","event":"\u001b[39m             ^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596245","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596275","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596303","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1442\u001b[0m\u001b[39m, in __call__\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596332","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mself.main\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39m*args, **kwargs\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596360","level":"info","event":"\u001b[39m           ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596388","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596416","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596447","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1362\u001b[0m\u001b[39m, in main\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596478","level":"info","event":"\u001b[39m    with \u001b[0m\u001b[1;35mself.make_context\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mprog_name, args, **extra\u001b[0m\u001b[1;39m)\u001b[0m\u001b[39m as ctx:\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596507","level":"info","event":"\u001b[39m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596536","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596566","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596599","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1186\u001b[0m\u001b[39m, in make_context\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596638","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mself.parse_args\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596684","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596715","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596747","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m1197\u001b[0m\u001b[39m, in parse_args\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596782","level":"info","event":"\u001b[39m    value, args = \u001b[0m\u001b[1;35mparam.handle_parse_result\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, opts, args\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596812","level":"info","event":"\u001b[39m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596840","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596869","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596897","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2416\u001b[0m\u001b[39m, in handle_parse_result\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596927","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.process_value\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596954","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.596982","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597009","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/click/co\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597037","level":"info","event":"\u001b[32mre.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m2355\u001b[0m\u001b[39m, in process_value\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597064","level":"info","event":"\u001b[39m    value = \u001b[0m\u001b[1;35mself.callback\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mctx, self, value\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597092","level":"info","event":"\u001b[39m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597120","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597147","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597174","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m586\u001b[0m\u001b[39m, in cb_discover\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597201","level":"info","event":"\u001b[39m    \u001b[0m\u001b[1;35mtap.run_discovery\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597228","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597256","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597283","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m323\u001b[0m\u001b[39m, in run_discovery\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597312","level":"info","event":"\u001b[39m    catalog_text = self.catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597340","level":"info","event":"\u001b[39m                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597368","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597395","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597422","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m343\u001b[0m\u001b[39m, in catalog_json_text\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597449","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mdump_json\u001b[0m\u001b[1;39m(\u001b[0m\u001b[39mself.catalog_dict, \u001b[0m\u001b[33mindent\u001b[0m\u001b[39m=\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597478","level":"info","event":"\u001b[39m                     ^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597506","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597537","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597567","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m334\u001b[0m\u001b[39m, in catalog_dict\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597597","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mt.cast\u001b[0m\u001b[1;39m(\u001b[0m\u001b[32m\"dict\"\u001b[0m\u001b[39m, \u001b[0m\u001b[1;35mself._singer_catalog.to_dict\u001b[0m\u001b[1;39m(\u001b[0m\u001b[1;39m)\u001b[0m\u001b[1;39m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597627","level":"info","event":"\u001b[39m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597658","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597692","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597721","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m352\u001b[0m\u001b[39m, in _singer_catalog\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597748","level":"info","event":"\u001b[39m    return \u001b[0m\u001b[1;35mCatalog\u001b[0m\u001b[1;39m(\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597776","level":"info","event":"\u001b[39m           ^^^^^^^^\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597803","level":"info","event":"\u001b[39m  File \u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597829","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597855","level":"info","event":"\u001b[32mdk/tap_base.py\"\u001b[0m\u001b[39m, line \u001b[0m\u001b[1;36m353\u001b[0m\u001b[39m, in <genexpr\u001b[0m\u001b[1m>\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597882","level":"info","event":"    \u001b[1m(\u001b[0mstream.tap_stream_id, stream._singer_catalog_entry\u001b[1m)\u001b[0m  # noqa: SLF001","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597910","level":"info","event":"                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597937","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597964","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/singer_s\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.597991","level":"info","event":"\u001b[32mdk/streams/core.py\"\u001b[0m, line \u001b[1;36m668\u001b[0m, in _singer_catalog_entry","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598017","level":"info","event":"    \u001b[33mschema\u001b[0m=\u001b[1;35msinger\u001b[0m\u001b[1;35m.Schema.from_dict\u001b[0m\u001b[1m(\u001b[0mself.schema\u001b[1m)\u001b[0m,","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598044","level":"info","event":"                                   ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598071","level":"info","event":"  File \u001b[32m\"/usr/local/lib/python3.12/functools.py\"\u001b[0m, line \u001b[1;36m998\u001b[0m, in __get__","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598100","level":"info","event":"    val = \u001b[1;35mself.func\u001b[0m\u001b[1m(\u001b[0minstance\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598128","level":"info","event":"          ^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598154","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598181","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598208","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m169\u001b[0m, in schema","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598235","level":"info","event":"    \u001b[1;35mth.Property\u001b[0m\u001b[1m(\u001b[0mcolumn, \u001b[1;35mth.StringType\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m)\u001b[0m for column in self.header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598263","level":"info","event":"                                                       ^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598291","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598317","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598343","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m143\u001b[0m, in header","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598376","level":"info","event":"    first_file = \u001b[1;35mself.get_file_paths\u001b[0m\u001b[1m(\u001b[0m\u001b[1m)\u001b[0m\u001b[1m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1m]\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598403","level":"info","event":"                 ^^^^^^^^^^^^^^^^^^^^^","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598429","level":"info","event":"  File ","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598455","level":"info","event":"\u001b[32m\"/project/.meltano/extractors/tap-csv/venv/lib/python3.12/site-packages/tap_csv/\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598481","level":"info","event":"\u001b[32mclient.py\"\u001b[0m, line \u001b[1;36m94\u001b[0m, in get_file_paths","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598508","level":"info","event":"    raise \u001b[1;35mException\u001b[0m\u001b[1m(\u001b[0mf\"File path does not exist \u001b[1m{\u001b[0mfile_path\u001b[1m}\u001b[0m\"\u001b[1m)\u001b[0m","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:37.598535","level":"info","event":"Exception: File path does not exist extract/data/transacoes.csv","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-09-12T06:23:38.768070","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DockerContainerFailedException","exc_value":"Docker container failed: {'StatusCode': 1}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":500,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":377,"name":"_run_image"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py","lineno":435,"name":"_run_image_with_mounts"}],"is_group":false,"exceptions":[]}]}
